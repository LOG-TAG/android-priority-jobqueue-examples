import java.util.regex.Pattern
task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
    }
}

configurations {
    archives {
        extendsFrom configurations.default
    }
}

apply plugin: 'android-library'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
    }
}

//READ VERSION NAME
def manifestFile = file("AndroidManifest.xml")
def pattern = Pattern.compile("versionName=\"([\\d\\.\\w\\-]+)\"")
def manifestText = manifestFile.getText()
def matcher = pattern.matcher(manifestText)
matcher.find()
def manifestVersionName = matcher.group(1)
println "version name:${manifestVersionName}"

//create jar tasks
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    println "checking variant ${name}"
    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def suffix = name.capitalize()
    println "found release variant"
    def jarTask = project.tasks.create(name: "jar${suffix}", type: Jar){
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir
        from 'LICENSE.txt'
    }
    def javadocTask = project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

    def javadocJarTask = project.tasks.create(name: "javadocJar${suffix}", type: Jar) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
        from android.sourceSets.main.allSource
        classifier = 'sources'
    }
    artifacts.add('archives', jarTask);
    artifacts.add('archives', javadocJarTask);
    artifacts.add('archives', sourcesJarTask);
}
//create jar tasks end


afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }
                println "sonatype username: ${sonatypeUsername}"

                pom.artifactId = 'android-priority-jobqueue'

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: sonatypeUsername, password: sonotypePassword)
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: sonatypeUsername, password: sonotypePassword)
                }

                pom.project {
                    modelVersion '4.0.0'
                    groupId 'com.path'
                    artifactId 'android-priority-jobqueue'
                    packaging 'jar'
                    name 'Android Priority Job Queue'
                    version manifestVersionName
                    description 'a Job Queue specifically written for Android to easily schedule jobs (tasks) that run in the background, improving UX and application stability.'
                    url 'https://github.com/path/android-priority-jobqueue'

                    parent {
                        groupId 'org.sonatype.oss'
                        artifactId 'oss-parent'
                        version 7
                    }

                    scm {
                        connection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
                        developerConnection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
                        url 'git@github.com:path/android-priority-jobqueue.git'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id "yigit"
                            name "Yigit Boyar"
                        }
                    }

                    dependencies {
                        dependency {
                            groupId 'com.google.android'
                            artifactId 'android'
                            version '2.2.1'
                        }
                    }
                }
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}
